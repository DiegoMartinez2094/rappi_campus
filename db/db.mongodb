use("db_ordenes_rappi");


db.createCollection("productos", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      additionalProperties: false,  // Impide la adición de propiedades adicionales no especificadas en el esquema.
      required: ["id_Producto", "nombre_Producto", "descripcion_Producto", "precio_und"],
      properties: {
        id_Producto: {
          bsonType: "int",
          description: "El id_producto debe ser un numero y es obligatorio"
        },
        nombre_Producto: {
          bsonType: "string",
          description: "Nombre_producto debe ser un string y es oligatorio"
        },
        descripcion_Producto: {
          bsonType: "string",
          description: "Descripción_producto es obligatorio y debe ser un string"
        },
        precio_und: {
          bsonType: ["int", "double"],
          description: "Precio por unidad del producto debe ser un numero puede llevar solo puntos"
        }
      }
    }
  }
})

db.createCollection("restaurante", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["id_Restaurante", "nombre_Restaurante", "telefono_Restaurante", "direccion_Restaurante", "calificacion_Restaurante"],
      properties: {
        id_Restaurante: {
          bsonType: "int",
          description: "Identificador único del restaurante debe ser un entero y es obligatorio"
        },
        nombre_Restaurante: {
          bsonType: "string",
          description: "Nombre del restaurante es obligatorio y debe ser un string"
        },
        telefono_Restaurante: {
          bsonType: "string",
          description: "Número de teléfono del restaurante es obligatorio"
        },
        direccion_Restaurante: {
          bsonType: "string",
          description: "Dirección del restaurante es obligatoria"
        },
        calificacion_Restaurante: {
          bsonType: "double",
          minimum: 0,
          maximum: 5,
          description: "Calificación del restaurante (valor entre 0 y 5) puede llevar puntos ejemplo 4.2"
        }
      }
    }
  }
})

db.createCollection("orden", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "id_Orden",
        "fecha_Creacion",
        "cliente",
        "producto",
        "pago",
        "estado",
        "repartidor_Asignado",
        "fecha_Entrega",
        "calificacion",
        "restaurante"
      ],
      properties: {
        id_Orden: {
          bsonType: "int",
          description: "Identificador único de la orden es obligatorio y debe ser un entero"
        },
        fecha_Creacion: {
          bsonType: "date",
          description: "Fecha de creación de la orden debe estar en formato Año-mes-dia ejemplo: 2023-08-31 y es obligatoria"
        },
        cliente: {
          bsonType: "object",
          required: ["nombre_Cliente", "direccion_Cliente", "telefono_Cliente"],
          properties: {
            nombre_Cliente: {
              bsonType: "string",
              description: "Nombre del cliente es obligatorio"
            },
            direccion_Cliente: {
              bsonType: "string",
              description: "Dirección del cliente es obligatoria"
            },
            telefono_Cliente: {
              bsonType: "string",
              description: "Número de teléfono del cliente es obligatorio"
            }
          }
        },
        producto: {
          bsonType: "object",
          required: ["id", "nombre_Producto", "precio_und", "cantidad_Producto"],
          properties: {
            id: {
              bsonType: "int",
              description: "Identificador único del producto es oligatorio"
            },
            nombre_Producto: {
              bsonType: "string",
              description: "Nombre del producto es obligatorio"
            },
            precio_und: {
              bsonType: ["int", "double"],
              description: "Precio por unidad del producto (entero o decimal) y es obligatorio"
            },
            cantidad_Producto: {
              bsonType: "int",
              description: "Cantidad del producto debe ser un numero entero"
            }
          }
        },
        pago: {
          bsonType: "object",
          required: ["monto", "metodo_Pago", "costo_domicilio", "pago_total"],
          properties: {
            monto: {
              bsonType: ["int", "double"],
              description: "Monto del pedido (entero o decimal)"
            },
            metodo_Pago: {
              bsonType: "string",
              description: "Método de pago debe ser una de estas: tarjeta credito, tarjeta debito, efectivo, bono",
              pattern: "^(tarjeta credito|tarjeta debito|efectivo|bono)$",
              options: "i" // La opción 'i' indica que la coincidencia sea insensible a mayúsculas y minúsculas.
            },
            costo_domicilio: {
              bsonType: ["int", "double"],
              description: "Costo de entrega (entero o decimal) y es obligatorio"
            },
            pago_total: {
              bsonType: ["int", "double"],
              description: "Pago total (entero o decimal) y es obligatorio"
            }
          }
        },
        estado: {
          bsonType: "string",
          pattern: "^(pendiente|entregado|cancelado)$",
          options: "i",
          description: "Estado de la orden debe ser pendiente, entregado, cancelado"
        },
        instrucciones_Especiales: {
          bsonType: "string",
          description: "Instrucciones especiales para la entrega"
        },
        repartidor_Asignado: {
          bsonType: "object",
          required: ["nombre_Repartidor", "telefono_Repartidor", "vehiculo", "nivel_repartidor"],
          properties: {
            nombre_Repartidor: {
              bsonType: "string",
              description: "Nombre del repartidor asignado"
            },
            telefono_Repartidor: {
              bsonType: "string",
              description: "Número de teléfono del repartidor"
            },
            vehiculo: {
              bsonType: "string",
              description: "Tipo de vehículo del repartidor debe ser caminando, bicicleta, moto o auto",
              pattern: "^(caminando|bicicleta|moto|auto)$",
              options: "i" // La opción 'i' indica que la coincidencia sea insensible a mayúsculas y minúsculas.
            },
            nivel_repartidor: {
              bsonType: "string",
              description: "Nivel de repartidor asignado debe ser: diamante, oro, plata, bronce",
              pattern: "^(diamante|oro|plata|bronce)$",
              options: "i"
            }
          }
        },
        fecha_Entrega: {
          bsonType: "date",
          description: "Fecha de entrega programada es obligatoria"
        },
        calificacion: {
          bsonType: ["int", "double"],
          minimum: 0,
          maximum: 5,
          description: "Calificación de la orden (valor entre 0 y 5) es obligatoria"
        },
        restaurante: {
          bsonType: "object",
          required: ["nombre", "telefono_Restaurante"],
          properties: {
            nombre: {
              bsonType: "string",
              description: "Nombre del restaurante es obligatorio"
            },
            telefono_Restaurante: {
              bsonType: "string",
              description: "Número de teléfono del restaurante es obligatorio"
            }
          }
        }
      }
    }
  }
})

db.createCollection("rol", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["Id_rol", "nombre_rol", "acceso_rol"],
      properties: {
        Id_rol: {
          bsonType: "int",
          description: "Identificador único del rol es obligatorio"
        },
        nombre_rol: {
          bsonType: "string",
          description: "Nombre del rol",
          pattern: "^(Super_administrador|administrador|cliente|repartidor)$",
        },
        acceso_rol: {
          bsonType: "array",
          description: "Lista de accesos permitidos para el rol",
          items: {
            bsonType: "string",
            enum: ["usuario", "producto", "orden", "restaurante", "pedido", "rol"],
            description: "Acceso permitido"
          }
        }
      }
    }
  }
})

db.createCollection("usuario", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["id_usuario", "nombre", "correo", "contraseña", "rol", "telefono", "direccion"],
      properties: {
        id_usuario: {
          bsonType: "int",
          description: "Identificador único del usuario es obligatorio y de tipo entero"
        },
        nombre: {
          bsonType: "string",
          description: "Nombre del usuario es obligatorio y de tipo string"
        },
        correo: {
          bsonType: "string",
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
          description: "Dirección de correo electrónico debe ser obligatoria"
        },
        contraseña: {
          bsonType: "string",
          description: "Contraseña del usuario es obligatoria"
        },
        rol: {
          bsonType: "string",
          description: "El rol es obligatorio y debe ser: Super_administrador, administrador, cliente, repartidor",
          pattern: "^(Super_administrador|administrador|cliente|repartidor)$",
        },
        telefono: {
          bsonType: ["int", "string"],
          description: "Número de teléfono del usuario (entero o cadena) y es obligatorio"
        },
        direccion: {
          bsonType: "string",
          description: "Dirección del usuario es obligatoria"
        }
      }
    }
  }
})

db.createCollection("pedido", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["id_pedido", "cliente", "producto", "pago"],
      properties: {
        id_pedido: {
          bsonType: "int",
          description: "Identificador único del pedido debe ser tipo int y obligatorio"
        },
        cliente: {
          bsonType: "object",
          required: ["nombre_Cliente", "direccion_Cliente", "telefono_Cliente"],
          properties: {
            nombre_Cliente: {
              bsonType: "string",
              description: "Nombre del cliente debe ser string y obligatorio"
            },
            direccion_Cliente: {
              bsonType: "string",
              description: "Dirección del cliente debe ser un string y obligatorio"
            },
            telefono_Cliente: {
              bsonType: "string",
              description: "Número de teléfono del cliente debe ser un string y obligatorio "
            }
          }
        },
        producto: {
          bsonType: "object",
          required: ["id", "nombre_Producto", "precio_und", "cantidad_Producto"],
          properties: {
            id: {
              bsonType: "int",
              description: "Identificador único del producto debe ser un entero y obligatorio"
            },
            nombre_Producto: {
              bsonType: "string",
              description: "Nombre del producto debe ser un string y obligatorio"
            },
            precio_und: {
              bsonType: ["int", "double"],
              description: "Precio por unidad del producto (entero o decimal) y obligatorio"
            },
            cantidad_Producto: {
              bsonType: "int",
              description: "Cantidad del producto debe ser un entero y obligatorio"
            }
          }
        },
        pago: {
          bsonType: "object",
          required: ["monto", "metodo_Pago", "costo_domicilio", "pago_total"],
          properties: {
            monto: {
              bsonType: ["int", "double"],
              description: "Monto del pedido (entero o decimal)"
            },
            metodo_Pago: {
              bsonType: "string",
              description: "Método de pago debe ser una de estas: tarjeta credito, tarjeta debito, efectivo, bono",
              pattern: "^(tarjeta credito|tarjeta debito|efectivo|bono)$",
              options: "i"
            },
            costo_domicilio: {
              bsonType: ["int", "double"],
              description: "Costo de entrega (entero o decimal) y obligatorio"
            },
            pago_total: {
              bsonType: ["int", "double"],
              description: "Pago total (entero o decimal) obligatorio"
            }
          }
        },
        instrucciones_Especiales: {
          bsonType: "string",
          description: "Instrucciones especiales para la entrega"
        }
      }
    }
  }
})




/** Colección producto */

db.producto.insertMany([
  {id_Producto: 1,nombre_Producto: "Manzanas",descripcion_Producto: "Frescas manzanas rojas de temporada",precio_und: 1.500,
  },
  {id_Producto: 2,nombre_Producto: "Arroz integral",descripcion_Producto: "Arroz integral de grano entero, rico en nutrientes",precio_und: 2.000
  },
  {id_Producto: 3,nombre_Producto: "Yogur griego",descripcion_Producto: "Yogur cremoso estilo griego, sin azúcares añadidos",precio_und: 3.500
  },
  {id_Producto: 4,nombre_Producto: "Pan integral",descripcion_Producto: "Pan integral recién horneado, perfecto para sándwiches",precio_und: 4.000
  },
  {id_Producto: 5,nombre_Producto: "Pollo orgánico",descripcion_Producto: "Pechugas de pollo orgánico, criado en condiciones naturales",precio_und: 8.000
  },
  {id_Producto: 6,nombre_Producto: "Ensalada mixta",descripcion_Producto: "Mezcla fresca de lechugas, tomates y zanahorias",precio_und: 5.500
  },
  {id_Producto: 7,nombre_Producto: "Salmón fresco",descripcion_Producto: "Filete de salmón atlántico fresco, alto en omega-3",precio_und: 12.000
  },
  {id_Producto: 8,nombre_Producto: "Pasta de trigo integral",descripcion_Producto: "Pasta de trigo integral para platos saludables"
  },
  {id_Producto: 9,nombre_Producto: "Miel pura",descripcion_Producto: "Miel natural y pura, directo del colmenar",precio_und: 6.000
  },
  {id_Producto: 10,nombre_Producto: "Vegetales congelados",descripcion_Producto: "Mezcla de vegetales congelados para guisos y salteados",precio_und: 3.200
  },
]);

/** Colección Restaurante */

db.restaurante.insertMany([
  {id_Restaurante: 1,nombre_Restaurante: "Delicias del Mar", telefono_Restaurante: "1234569877", direccion_Restaurante: "Calle de los Sabores 123",calificacion_Restaurante: 4.2,
  },
  {id_Restaurante: 2,nombre_Restaurante: "La Parrilla Dorada", telefono_Restaurante: "65456", direccion_Restaurante: "Avenida de la Brasa 456",calificacion_Restaurante: 4.5,
  },
  {id_Restaurante: 3,nombre_Restaurante: "Sabor y Tradición", telefono_Restaurante: "456454654", direccion_Restaurante: "Plaza de las Especias 789",calificacion_Restaurante: 3.8,
  },
  {id_Restaurante: 4,nombre_Restaurante: "Fusión Oriental", telefono_Restaurante: "4456445", direccion_Restaurante: "Calle del Bambú 234",calificacion_Restaurante: 4.0,
  },
  {id_Restaurante: 5,nombre_Restaurante: "El Rincón Criollo", telefono_Restaurante: "453456453", direccion_Restaurante: "Avenida de los Sabores 567",calificacion_Restaurante: 4.7,
  },
  {id_Restaurante: 6,nombre_Restaurante: "La Cantina Mexicana", telefono_Restaurante: "45345345", direccion_Restaurante: "Calle del Tequila 890",calificacion_Restaurante: 4.1,
  },
  {id_Restaurante: 7,nombre_Restaurante: "Sabores Mediterráneos", telefono_Restaurante: "45864558", direccion_Restaurante: "Paseo de las Olivas 123",calificacion_Restaurante: 3.6,
  },
  {id_Restaurante: 8,nombre_Restaurante: "Cocina Vegana Verde", telefono_Restaurante: "8456455", direccion_Restaurante: "Avenida de las Hojas 456",calificacion_Restaurante: 4.3,
  },
  {id_Restaurante: 9,nombre_Restaurante: "La Brasserie Elegante", telefono_Restaurante: "483544545", direccion_Restaurante: "Plaza de la Elegancia 789",calificacion_Restaurante: 4.8,
  },
  {id_Restaurante: 10,nombre_Restaurante: "Sazón Criollo", telefono_Restaurante: "4545884548", direccion_Restaurante: "Calle de los Aromas 234",calificacion_Restaurante: 3.9,
  },
]);

/** Colección Orden */

db.orden.insertMany([
  {
    id_Orden: 1,
    fecha_Creacion: "2023-08-29",
    cliente: { nombre_Cliente: "Carlos Rodríguez",direccion_Cliente: "Cll 23c 58-94 barrio Alcala",telefono_Cliente:"123-456-7890"},
    producto: { id: 1, nombre_Producto: "Manzanas",precio_und: 1.500, cantidad_Producto:10},
    pago: { monto: 15.000, metodo_Pago: "Tarjeta", costo_domicilio: 5000, pago_total: 20.000 },
    estado: "pendiente",
    instrucciones_Especiales:"dejar en la puerta",
    repartidor_Asignado: { nombre_Repartidor: "Luis Hernandez",telefono_Repartidor: "555-123-4567",vehiculo: "Caminando",nivel_repartidor: "Diamante" },
    fecha_Entrega: "2023-08-31",
    calificacion: 3.5,
    restaurante: { nombre: "El Rincón Criollo", telefono_Restaurante: "453456453" },
  },
  {
    id_Orden: 2,
    fecha_Creacion: "2023-08-25",
    cliente: { nombre_Cliente: "Sofía Fernández",direccion_Cliente: "av25 48-73 barrio provenza",telefono_Cliente: "987-654-3210"},
    producto: { id: 2, nombre: "Arroz integral",precio_und: 2.000, cantidad_Producto:1 },
    pago: { monto:2000 , metodo_Pago: "Efectivo",costo_domicilio: 4000, pago_total: 6.000 },
    estado: "entregado",
    instrucciones_Especiales: "preguntar por Juan",
    repartidor_Asignado: { nombre_Repartidor: "Ana Torres",telefono_Repartidor: "555-987-6543",vehiculo: "Bicicleta",nivel_repartidor: "Oro"},
    fecha_Entrega: "2023-08-26",
    calificacion: 4.3,
    restaurante: { nombre: "Fusión Oriental",telefono_Restaurante: "4456445" },
  },
  {
    id_Orden: 3,
    fecha_Creacion: "2023-08-27",
    cliente: { nombre_Cliente: "Marta Sánchez",direccion_Cliente: "avrosales  57-12 barrio Villamil",telefono_Cliente: "3185472568"},
    producto: { id_Producto: 3,nombre_Producto: "Yogur griego",precio_und: 3.500, cantidad_Producto:2 },
    pago: { monto:7000 , metodo_Pago: "Efectivo",costo_domicilio: 6000, pago_total: 13.000 },
    estado: "entregado",
    instrucciones_Especiales: "dejar en porteria",
    repartidor_Asignado: {nombre_Repartidor: "Carlos Martinez",telefono_Repartidor: "555-555-5555",vehiculo: "Moto",nivel_repartidor: "Plata"},
    fecha_Entrega: "2023-08-26",
    calificacion: 4.3,
    restaurante: { nombre_Restaurante: "Sabores Mediterráneos", telefono_Restaurante: "45864558"},
  },
  {
    id_Orden: 4,
    fecha_Creacion: "2023-08-10",
    cliente: { id_Cliente: 5,nombre_Cliente: "Javier Torres",direccion_Cliente: " occ 17-11 barrio Carmen",telefono_Cliente: "274856233"},
    producto: { id_Producto: 3,nombre_Producto: "Pollo orgánico",precio_und: 8.000, cantidad_Producto:2 },
    pago: { monto:16000 , metodo_Pago: "trajeta de credito", costo_domicilio: 8000, pago_total: 24.000 },
    estado: "entregado",
    instrucciones_Especiales: "tocar la puerta",
    repartidor_Asignado: {nombre_Repartidor: "Patricia Luna",telefono_Repartidor: "555-999-1111",vehiculo: "Auto",nivel_repartidor: "Oro"},
    fecha_Entrega: "2023-08-11",
    calificacion: 5,
    restaurante: { nombre_Restaurante: "Delicias del Mar", telefono_Restaurante: "1234569877"},
  },
  {
    id_Orden: 5,
    fecha_Creacion: "2023-08-10",
    cliente: { id_Cliente: 9,nombre_Cliente: "Diego Fernandez",direccion_Cliente: " cra 33 58-24 barrio Cabecera",telefono_Cliente: "245875665"},
    producto: { id_Producto: 6,nombre_Producto: "Ensalada mixta",precio_und: 5.500, cantidad_Producto:3 },
    pago: { monto:16.500 , metodo_Pago: "trajeta de debito", costo_domicilio: 6.500, pago_total: 23.000 },
    estado: "entregado",
    instrucciones_Especiales: "llamar al telefono del cliente",
    repartidor_Asignado: {nombre_Repartidor: "María Silva",telefono_Repartidor: "555-666-8888",vehiculo: "Moto",nivel_repartidor: "Plata"},
    fecha_Entrega: "2023-08-10",
    calificacion: 4,
    restaurante: { nombre_Restaurante: "Cocina Vegana Verde", telefono_Restaurante: "8456455"},
  }
]);

/** Colección rol */

db.rol.insertMany([
  {
    Id_rol:1,
    nombre_rol: "Super_administrador",
    acceso_rol: ["usuario", "producto", "orden", "restaurante", "pedido", "rol" ]
  },
  {
    Id_rol:2,
    nombre_rol: "administrador",
    acceso_rol: ["usuario", "producto", "orden", "restaurante", "pedido" ]
  },
  {
    Id_rol:3,
    nombre_rol: "cliente",
    acceso_rol: ["restaurante", "producto", "pedido"]
  },
  {
    Id_rol:4,
    nombre_rol: "repartidor",
    acceso_rol: ["orden"]
  }
]);

/** Colección usuario */

db.usuario.insertMany([
  {
    id_usuario:1,
    nombre: "Adrian Bueno",
    correo: "adrianjbuenop@gmail.com",
    contraseña:"Ajbp170605",
    rol:"Super_administrador",
    telefono: 3504265412,
    direccion: "cra14aw#45b17"
   },
  {
    id_usuario:2,
    nombre: "Diego Martinez",
    correo: "diegofernadndomartinezcalderon@gmail.com",
    contraseña:"123456789dm",
    rol:"Super_administrador",
    telefono: 3151456321,
    direccion: "cra14afk#15"
  },
  {
    id_usuario:3,
    nombre: "Adrian Bueno",
    correo: "adrianj@gmail.com",
    contraseña:"adrian17",
    rol:"administrador",
    telefono: 3504265412,
    direccion: "cra14aw#45b17"
   },
  {
    id_usuario:4,
    nombre: "Diego Martinez",
    correo: "diegof@gmail.com",
    contraseña:"facil456",
    rol:"administrador",
    telefono: 3151456321,
    direccion: "cra14afk#15"
  },
  {
    id_usuario:5,
   nombre: "Diego Hernando",
   correo: "diego63_19@hotmail.com",
   contraseña:"facil789",
   rol:"cliente",
   telefono: 3151456321,
   direccion: "cra14afk#15"
  },
  {
    id_usuario:6,
    nombre: "Adrian Pedraza",
    correo: "Adrian123@hotmail.com",
    contraseña:"123456789ab",
    rol:"repartidor",
    telefono: 3254896541,
    direccion: "calle45"
  },
  {
    id_usuario:7,
    nombre: "fernando Calderon",
    correo: "fernando@hotmail.com",
    contraseña:"123456789fc",
    rol:"cliente",
    telefono: 3478965412,
    direccion: "cra48"
  },
  {
    id_usuario:8,
    nombre: "carlo lopez",
    correo: "carlos@hotmail.com",
    contraseña:"123456789cp",
    rol:"repartidor",
    telefono: 310245628,
    direccion: "cra50"
  },
  {
    id_usuario:9,
    nombre: "Joel Pedraza",
    correo: "joel@gmail.com",
    contraseña:"hola1234",
    rol:"cliente",
    telefono: 3504265412,
    direccion: "cra51"
  },
  {
    id_usuario:10,
    nombre: "juan manito",
    correo: "juan@hotmail.com",
    contraseña:"si123456789",
    rol:"repartidor",
    telefono: 3201425632,
    direccion: "cra52"
  },
  {
    id_usuario:11,
    nombre: "maria gonzales",
    correo: "maria@hotmail.com",
    contraseña:"facil1234",
    rol:"cliente",
    telefono: 3904555485,
    direccion: "cra53"
  },
  {
    id_usuario:12,
    nombre: "juana martinez",
    correo: "juana@hotmail.com",
    contraseña:"juana123",
    rol:"repartidor",
    telefono: 3502145632,
    direccion: "cra54"
  },
  {
    id_usuario:13,
    nombre: "mariana palacio",
    correo: "mariana@hotmail.com",
    contraseña:"no12345",
    rol:"cliente",
    telefono: 3102456283,
    direccion: "cra56"
  },
  {
    id_usuario:14,
    nombre: "diego manga",
    correo: "diego@hotmail.com",
    contraseña:"diego1234",
    rol:"repartidor",
    telefono: 3504265412,
    direccion: "cra57"
  }
]);

/** Colección pedido */

db.pedido.insertMany([
  {
    id_pedido:1,
  cliente: { nombre_Cliente: "Carlos Rodríguez",direccion_Cliente: "Cll 23c 58-94 barrio Alcala",telefono_Cliente:"123-456-7890"},
  producto: { id: 1, nombre_Producto: "Manzanas",precio_und: 1.500, cantidad_Producto:10},
 pago: { monto: 15.000, metodo_Pago: "Tarjeta", costo_domicilio: 5000, pago_total: 20.000 },
instrucciones_Especiales:"dejar en la puerta",
  },
  {
    id_pedido: 2,
    cliente: { nombre_Cliente: "Ana Martínez", direccion_Cliente: "Av. Principal 123", telefono_Cliente: "987-654-3210" },
    producto: { id: 3, nombre_Producto: "Lechugas", precio_und: 800, cantidad_Producto: 5 },
    pago: { monto: 4000, metodo_Pago: "Efectivo", costo_domicilio: 2000, pago_total: 6000 },
    instrucciones_Especiales: "Llamar antes de entregar",
  },
  {
    id_pedido: 3,
    cliente: { nombre_Cliente: "María López", direccion_Cliente: "Cra 10 25-30", telefono_Cliente: "555-123-4567" },
    producto: { id: 2, nombre_Producto: "Peras", precio_und: 1200, cantidad_Producto: 8 },
    pago: { monto: 9600, metodo_Pago: "Tarjeta", costo_domicilio: 3500, pago_total: 13100 },
    instrucciones_Especiales: "No incluir condimentos",
  },
  {
    id_pedido: 4,
    cliente: { nombre_Cliente: "Juan Pérez", direccion_Cliente: "Calle 5 #10-15", telefono_Cliente: "111-222-3333" },
    producto: { id: 4, nombre_Producto: "Plátanos", precio_und: 1000, cantidad_Producto: 6 },
    pago: { monto: 6000, metodo_Pago: "Efectivo", costo_domicilio: 2500, pago_total: 8500 },
    instrucciones_Especiales: "Entregar después de las 5 PM",
  },
  {
    id_pedido: 5,
    cliente: { nombre_Cliente: "Laura Gómez", direccion_Cliente: "Av. Central 456", telefono_Cliente: "444-555-6666" },
    producto: { id: 1, nombre_Producto: "Manzanas", precio_und: 1500, cantidad_Producto: 3 },
    pago: { monto: 4500, metodo_Pago: "Tarjeta", costo_domicilio: 3000, pago_total: 7500 },
    instrucciones_Especiales: "Dejar con el portero",
  },
  {
    id_pedido: 6,
    cliente: { nombre_Cliente: "Andrés Ramírez", direccion_Cliente: "Cra 20 #30-40", telefono_Cliente: "777-888-9999" },
    producto: { id: 5, nombre_Producto: "Tomates", precio_und: 900, cantidad_Producto: 4 },
    pago: { monto: 3600, metodo_Pago: "Efectivo", costo_domicilio: 1800, pago_total: 5400 },
    instrucciones_Especiales: "Ninguna",
  },
  {
    id_pedido: 7,
    cliente: { nombre_Cliente: "Elena Torres", direccion_Cliente: "Cll 15A 28-10", telefono_Cliente: "123-789-4560" },
    producto: { id: 3, nombre_Producto: "Lechugas", precio_und: 800, cantidad_Producto: 2 },
    pago: { monto: 1600, metodo_Pago: "Tarjeta", costo_domicilio: 1500, pago_total: 3100 },
    instrucciones_Especiales: "Usar caja de regalo",
  },
  {
    id_pedido: 8,
    cliente: { nombre_Cliente: "Pedro Martínez", direccion_Cliente: "Av. Libertad 789", telefono_Cliente: "555-111-2222" },
    producto: { id: 2, nombre_Producto: "Peras", precio_und: 1200, cantidad_Producto: 7 },
    pago: { monto: 8400, metodo_Pago: "Efectivo", costo_domicilio: 2800, pago_total: 11200 },
    instrucciones_Especiales: "Sin empaque plástico",
  },
  {
    id_pedido: 9,
    cliente: { nombre_Cliente: "Sofía Díaz", direccion_Cliente: "Cra 8 15-20", telefono_Cliente: "999-888-7777" },
    producto: { id: 6, nombre_Producto: "Zanahorias", precio_und: 700, cantidad_Producto: 5 },
    pago: { monto: 3500, metodo_Pago: "Tarjeta", costo_domicilio: 2000, pago_total: 5500 },
    instrucciones_Especiales: "Llamar antes de llegar",
  },
  {
    id_pedido: 10,
    cliente: { nombre_Cliente: "Luisa Vargas", direccion_Cliente: "Cll 30 12-25", telefono_Cliente: "666-555-4444" },
    producto: { id: 4, nombre_Producto: "Plátanos", precio_und: 1000, cantidad_Producto: 2 },
    pago: { monto: 2000, metodo_Pago: "Efectivo", costo_domicilio: 2200, pago_total: 4200 },
    instrucciones_Especiales: "Dejar en la puerta trasera",
  },
  {
    id_pedido: 11,
    cliente: { nombre_Cliente: "Ricardo Silva", direccion_Cliente: "Av. Principal 789", telefono_Cliente: "111-333-5555" },
    producto: { id: 5, nombre_Producto: "Tomates", precio_und: 900, cantidad_Producto: 3 },
    pago: { monto: 2700, metodo_Pago: "Tarjeta", costo_domicilio: 2500, pago_total: 5200 },
    instrucciones_Especiales: "Entregar en la oficina 305",
  },
  {
    id_pedido: 12,
    cliente: { nombre_Cliente: "Marcela Rueda", direccion_Cliente: "Cra 12 20-15", telefono_Cliente: "555-777-9999" },
    producto: { id: 1, nombre_Producto: "Manzanas", precio_und: 1500, cantidad_Producto: 4 },
    pago: { monto: 6000, metodo_Pago: "Efectivo", costo_domicilio: 1800, pago_total: 7800 },
    instrucciones_Especiales: "Dejar en la recepción",
  },
  {
    id_pedido: 13,
    cliente: { nombre_Cliente: "Javier Gutiérrez", direccion_Cliente: "Cll 18A 35-40", telefono_Cliente: "222-444-6666" },
    producto: { id: 3, nombre_Producto: "Lechugas", precio_und: 800, cantidad_Producto: 6 },
    pago: { monto: 4800, metodo_Pago: "Tarjeta", costo_domicilio: 2800, pago_total: 7600 },
    instrucciones_Especiales: "Ninguna",
  }
]);